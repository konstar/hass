blueprint:
  name: AREA set temperature v2
  description: Set temperature selection for the state of an area.
  domain: automation
  source_url: https://github.com/konstar/hass/blob/main/blueprints/AREA-set-temperature-v2.yaml
  input:
    output:
      name: Temperature helper
      description: Helper that stores whether room is hot or cold, etc.
      selector:
        entity:
          domain: input_select
    sensor:
      name: Temperature sensor
      description: Temperature sensor of the area.
      selector:
        entity:
          domain: sensor
          device_class: temperature
    target_high:
      name: High target temperature
      description: High target temperature of the area.
      selector:
        entity:
          domain: input_number
    target_low:
      name: Low target temperature
      description: Low target temperature of the area.
      selector:
        entity:
          domain: input_number
variables:
  output: !input "output"
  sensor: !input "sensor"
  target_high: !input "target_high"
  target_low: !input "target_low"
trigger:
  - id: extremely-cold
    platform: numeric_state
    entity_id: !input sensor
    below: input_number.indoor_temperature_target_min
  - id: extremely-hot
    platform: numeric_state
    entity_id: !input sensor
    above: input_number.indoor_temperature_target_max
  - id: sensor
    platform: state
    entity_id: !input sensor
  - id: target
    platform: state
    entity_id: !input target_high
  - id: target
    platform: state
    entity_id: !input target_low
condition: []
action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input sensor
            state:
              - unknown
              - unavailable
        sequence:
          - alias: "Stop here if the sensor is broken"
            delay: 1
      - conditions:
          - condition: trigger
            id: extremely-cold
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input "output"
            data:
              option: extremely-cold
      - conditions:
          - condition: trigger
            id: extremely-hot
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input "output"
            data:
              option: extremely-hot
      - conditions:
          - "{{ ( states(sensor)|float > (states(target_low)|float + 0.1) ) and ( states(sensor)|float < (states(target_high)|float - 0.1) ) }}"
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input "output"
            data:
              option: normal
      - conditions:
          - "{{ ( states(sensor)|float > (states(target_high)|float + 0.1) )  and  ( states(sensor)|float < (states(target_high)|float + 1.9) ) }}"
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input "output"
            data:
              option: hot
      - conditions:
          - "{{ ( states(sensor)|float < (states(target_low)|float - 0.1) )  and  ( states(sensor)|float > (states(target_low)|float - 1.9) ) }}"
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input "output"
            data:
              option: cold
      - conditions:
          - "{{ ( states(sensor)|float > (states(target_high)|float + 2.1) ) and ( states(sensor)|float < states('input_number.indoor_temperature_target_max')|float ) }}"
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input "output"
            data:
              option: very-hot
      - conditions:
          - "{{ ( states(sensor)|float < (states(target_low)|float - 2.1) ) and ( states(sensor)|float > states('input_number.indoor_temperature_target_min')|float ) }}"
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input "output"
            data:
              option: very-cold
mode: restart
