blueprint:
  name: AREA set temperature
  description: Set temperature selection for the state of an area.
  domain: automation
  source_url: https://github.com/konstar/hass/blob/main/blueprints/area-set-temperature.yaml
  input:
    activity:
      name: Activity helper
      description: Helper that records the activity that is happening in the room.
      selector:
        entity:
          domain: input_select
    sensor:
      name: Temperature sensor
      description: Temperature sensor of the area.
      selector:
        entity:
          domain: sensor
          device_class: temperature
    active_temp:
      name: Active temperature helper
      description: Helper which manages the temperature of the room when active.
      selector:
        entity:
          domain: input_number
    change_temp:
      name: Change temperature helper
      description: Helper which manages the temperature of the room when changing.
      selector:
        entity:
          domain: input_number
    relax_temp:
      name: Relax temperature helper
      description: Helper which manages the temperature of the room when relaxing.
      selector:
        entity:
          domain: input_number
    sleep_temp:
      name: Sleep temperature helper
      description: Helper which manages the temperature of the room when sleeping.
      selector:
        entity:
          domain: input_number
    output:
      name: Output helper
      description: Helper that stores whether room is hot or cold, etc.
      selector:
        entity:
          domain: input_select
variables:
  activity: !input "activity"
  sensor: !input "sensor"
  active_temp: !input "active_temp"
  change_temp: !input "change_temp"
  relax_temp: !input "relax_temp"
  sleep_temp: !input "sleep_temp"
  output: !input "output"
trigger:
  - id: normal
    platform: template
    value_template:
      ( is_state(activity,'active')
        and (states(sensor)|float - states(active_temp)|float) > -2
        and (states(sensor)|float - states(active_temp)|float) < 2 )
      or ( is_state(activity,'change')
        and (states(sensor)|float - states(change_temp)|float) > -2
        and (states(sensor)|float - states(change_temp)|float) < 2 )
      or ( is_state(activity,'relax')
        and (states(sensor)|float - states(relax_temp)|float) > -2
        and ( states(sensor)|float - states(relax_temp)|float ) < 2 )
      or ( is_state(activity,'sleep')
        and (states(sensor)|float - states(sleep_temp)|float) > -2
        and (states(sensor)|float - states(sleep_temp)|float) < 2 )
  - id: hot
    platform: template
    value_template:
      ( is_state(activity,'active')
        and (states(sensor)|float - states(active_temp)|float) > 2
        and (states(sensor)|float - states(active_temp)|float) < 4 )
      or ( is_state(activity,'change')
        and (states(sensor)|float - states(change_temp)|float) > 2
        and (states(sensor)|float - states(change_temp)|float) < 4 )
      or ( is_state(activity,'relax')
        and (states(sensor)|float - states(relax_temp)|float) > 2
        and (states(sensor)|float - states(relax_temp)|float) < 4 )
      or ( is_state(activity,'sleep')
        and (states(sensor)|float - states(sleep_temp)|float) > 2
        and (states(sensor)|float - states(sleep_temp)|float) < 4 )
  - id: cold
    platform: template
    value_template:
      ( is_state(activity,'active')
        and (states(sensor)|float - states(active_temp)|float) > -4
        and (states(sensor)|float - states(active_temp)|float) < -2 )
      or ( is_state(activity,'change')
        and (states(sensor)|float - states(change_temp)|float) > -4
        and (states(sensor)|float - states(change_temp)|float) < -2 )
      or ( is_state(activity,'relax')
        and (states(sensor)|float - states(relax_temp)|float) > -4
        and (states(sensor)|float - states(relax_temp)|float) < -2 )
      or ( is_state(activity,'sleep')
        and (states(sensor)|float - states(sleep_temp)|float) > -4
        and (states(sensor)|float - states(sleep_temp)|float) < -2 )
  - id: very_hot
    platform: template
    value_template:
      ( is_state(activity,'active')
        and (states(sensor)|float - states(active_temp)|float) > 4 )
      or ( is_state(activity,'change')
        and (states(sensor)|float - states(change_temp)|float) > 4 )
      or ( is_state(activity,'relax')
        and (states(sensor)|float - states(relax_temp)|float) > 4 )
      or ( is_state(activity,'sleep')
        and (states(sensor)|float - states(sleep_temp)|float) > 4 )
  - id: very_cold
    platform: template
    value_template:
      ( is_state(activity,'active')
        and (states(sensor)|float - states(active_temp)|float) < -4 )
      or ( is_state(activity,'change')
        and (states(sensor)|float - states(change_temp)|float) < -4 )
      or ( is_state(activity,'relax')
        and (states(sensor)|float - states(relax_temp)|float) < -4 )
      or ( is_state(activity,'sleep')
        and (states(sensor)|float - states(sleep_temp)|float) < -4 )
  - id: unknown_1
    platform: numeric_state
    entity_id: !input "sensor"
    below: 1
  - id: unknown_2
    platform: numeric_state
    entity_id: !input "sensor"
    above: 50
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: normal
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input "output"
            data:
              option: normal
      - conditions:
          - condition: trigger
            id: hot
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input "output"
            data:
              option: hot
      - conditions:
          - condition: trigger
            id: cold
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input "output"
            data:
              option: cold
      - conditions:
          - condition: trigger
            id: very_hot
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input "output"
            data:
              option: very_hot
      - conditions:
          - condition: trigger
            id: very_cold
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input "output"
            data:
              option: very-cold
      - conditions:
          - condition: or
            conditions:
              - condition: trigger
                id: unknown_1
              - condition: trigger
                id: unknown_2
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input "output"
            data:
              option: unknown
mode: single
