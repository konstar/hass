blueprint:
  name: DEVICE Media Player
  description: Manage 1 or many media player devices.
    Comma separate multiple values, to specify when devices should be set, e.g. sleep,work,midnight,absent
  domain: automation
  source_url: https://github.com/konstar/hass/blob/main/blueprints/DEVICE-Media-Player.yaml
  input:
    entities:
      name: Media device(s)
      description: Devices that this blueprint will apply to
      selector:
        entity:
          domain: media_player
          multiple: true
    activity:
      name: Activity helper
      description: Activity helper of the room
      selector:
        entity:
          domain: input_select
    presence:
      name: Presence helper
      description: Presence helper of the room
      selector:
        entity:
          domain: input_select
    time:
      name: Time helper
      description: Time selector of the room
      selector:
        entity:
          domain: input_select
    dnd:
      name: DND
      description: When should devices be set to Do Not Disturb mode?
      selector:
        text:
          type: text
    mute:
      name: Mute
      description: Which should device be muted?
      selector:
        text:
          type: text
    pct10:
      name: 10% volume
      description: When should the device be set to 10% volume?
      selector:
        text:
          type: text
    pct20:
      name: 20% volume
      description: When should the device be set to 20% volume?
      selector:
        text:
          type: text
    pct30:
      name: 30% volume
      description: When should the device be set to 30% volume?
      selector:
        text:
          type: text
    pct40:
      name: 40% volume
      description: When should the device be set to 40% volume?
      selector:
        text:
          type: text
    pct50:
      name: 50% volume
      description: When should the device be set to 50% volume?
      selector:
        text:
          type: text
variables:
  entities: !input entities
  activity: !input activity
  presence: !input presence
  time: !input time
  dnd: !input dnd
  mute: !input mute
  pct10: !input pct10
  pct20: !input pct20
  pct30: !input pct30
  pct40: !input pct40
  pct50: !input pct50
trigger:
  - platform: state
    entity_id:
      - !input activity
      - !input presence
      - !input time
condition: []
action:
  - service: input_text.set_value
    target:
      entity_id: input_text.debug1
    data:
      value: "{{ [activity,presence,time] }}"
  - service: input_text.set_value
    target:
      entity_id: input_text.debug2
    data:
      value: "{{ dnd }}"
  - service: input_text.set_value
    target:
      entity_id: input_text.debug2
    data:
      value: "{{ mute }}"
  - if:
      - condition: template
        value_template: >-
          {{ states.input_select
          | selectattr('entity_id','in',[activity,presence,time])
          | selectattr('state','in',dnd)
          | list | count > 0
          }}
    then:
      - service: switch.turn_on
        entity_id: !input entities
    else:
      - service: switch.turn_off
        entity_id: !input entities
  - choose:
      - conditions:
          - condition: template
            value_template: >-
              {{ states.input_select
              | selectattr('entity_id','in',[activity,presence,time])
              | selectattr('state','in',mute)
              | list | count > 0
              }}
        sequence:
          - service: media_player.volume_mute
            entity_id: !input entities
            data:
              is_volume_muted: true
      - conditions:
          - condition: template
            value_template: >-
              {{ states.input_select
              | selectattr('entity_id','in',[activity,presence,time])
              | selectattr('state','in',pct10)
              | list | count > 0
              }}
        sequence:
          - service: media_player.volume_set
            entity_id: !input entities
            data:
              volume_level: 0.1
      - conditions:
          - condition: template
            value_template: >-
              {{ states.input_select
              | selectattr('entity_id','in',[activity,presence,time])
              | selectattr('state','in',pct20)
              | list | count > 0
              }}
        sequence:
          - service: media_player.volume_set
            entity_id: !input entities
            data:
              volume_level: 0.2
      - conditions:
          - condition: template
            value_template: >-
              {{ states.input_select
              | selectattr('entity_id','in',[activity,presence,time])
              | selectattr('state','in',pct30)
              | list | count > 0
              }}
        sequence:
          - service: media_player.volume_set
            entity_id: !input entities
            data:
              volume_level: 0.3
      - conditions:
          - condition: template
            value_template: >-
              {{ states.input_select
              | selectattr('entity_id','in',[activity,presence,time])
              | selectattr('state','in',pct40)
              | list | count > 0
              }}
        sequence:
          - service: media_player.volume_set
            entity_id: !input entities
            data:
              volume_level: 0.4
      - conditions:
          - condition: template
            value_template: >-
              {{ states.input_select
              | selectattr('entity_id','in',[activity,presence,time])
              | selectattr('state','in',pct50)
              | list | count > 0
              }}
        sequence:
          - service: media_player.volume_set
            entity_id: !input entities
            data:
              volume_level: 0.5
    default: []
mode: single
